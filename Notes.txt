1. Authentication: 
- User 

2. Model 
User.php
Question.php

3. Generate data using Faker : /database/factories/
 -  craete faker command: 
    $ php artisan make:factory QuestionFactory 
    find the QuestionFactory.php in the above directory 
 -  There is already Factory for User as UserFactory.php

4. Tinker and Faker
 $ php artisan tinker 
 >>> use Faker\factory
 >>> $faker=Factory::create()
 >>> $faker->sentence() // create a random sentence 
 >>> $faker->sentences(3)
 >>> $faker->paragraph() //create a random paragraph
 >>> $faker->paragraphs(5) 


FAKE USER 
$ php artisan tinker 
>>>factory(App\Factory::class, 3)->create()
check user table in database 


DATABASE SEEDING 
Because questions and user table has dependency. Run below command: 
$ php artisan make:imgrate:fresh --seed

MAKE QUESTIONS CONTROLLER 
$ php artisan make:controller QuestionsController --resource

PAGINATION
$ php artisan vendor:publish --tag=laravel-pagination
check in /resources/views/vendor/pagination/bootstrap-4.blade.php

MAKE CONTROLLER 
$ php artisan make:controller QuestionsController --resource --model=Question
--------------------------------------
HOW TO USE ELOQUENT ACCESSORS

HOW TO FORMATE TIMESTAMP 

HOW TO USE EAGER LOADING (Alleviates N + 1 query problem)
-----------

HTTPS REQUREST (clean form validation)
$ php artisan make:requrest AskQuestionRequest

DISPLAYING ROUTE
$ php artisan route:list 
$ php artisan route:list --name=questions.index

******************************************************************************************************
Authorization using Policy
-------------------------
$ php artisan make:policy QuestionPolicy --model=Question
find the file : /App/Policies/QuestionPolicy 

******************************************************************************************************

ANSWERS
-------------
1. Create Schema 
$ php artisan make:model Answer -m

rename column: 
$ php artisan make:migration rename_answers_in_questions_table --table=questions
-- install Doctorin dependency--
$ composer require doctrine/dbal

Answer Factory 
$ php artisan make:factory AnswerFactory 
After make factory in the above file run below command: 
$ php artisan migrate:fresh --seed 


********************************************************************************************************

avatar 
********************************************************************************************************

Installation of Font-awsome 5
1. CDN 
2. Download 
3. Using npm 
 - $ npm i @fortawesome/fontawesome @fortawesome/fontawesome-free-solid -D
 - craete fontawesome.js file in resources/js/ 
 - include it in /resource/js/app.js require('./fontawesome'); 
 - run: $ npm run watch
